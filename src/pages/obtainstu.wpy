<style lang="scss">
@import "../styles/style";
.runk{
  border-right: 1rpx solid #D8D8D8;
}
.date{
  border:1rpx solid #3EC16C;
  padding:13rpx 28rpx;
  border-radius: 10rpx;
}
.weekbtn{
  padding:12rpx 43rpx;
  border-radius: 8rpx;
}
.obtain_date_icon{
  margin-right:34rpx;
  margin-left:30rpx;
  image{
    width: 34rpx;
    height: 34rpx;
  }
}
</style>

<template lang="wxml">
  <Panel>
    <view class="title" slot="title"></view>
    <view class="title" slot="content">
      <view class="weui-flex align-center pd30 bgc_fff c_4C556E">
        <view class=" obtain_date_icon"><image src="../image/obtain_date_icon.png" /></view>
        <view class="weui-flex weui-flex__item">
            <view class="date font24">
              <picker mode="date" value="{{startvalue}}" start="{{startdate}}" end="{{enddate}}" data-type="0" bindchange="bindDateChange">
                {{startvalue}}
              </picker>
            </view>
            <text class="tag"> - </text>
            <view class="date font24">
              <picker mode="date" value="{{endvalue}}" start="{{startdate}}" end="{{enddate}}" data-type="1" bindchange="bindDateChange">
                {{endvalue}}
              </picker>
            </view>
        </view>
        <view class="weui-flex__item textright" >
            <text class="weekbtn font32 c_fff main_bg_color " @tap="getWeekData">本周</text>
        </view>
      </view>
    </view>
  </Panel>

  <Panel>
    <view class="title" slot="title"></view>
    <view class="title" slot="content">
      <view wx:if="{{obtainstudent.data}}" class="weui-flex font28 c_4C556E pd20 bgc_fff mb20">
        <view class="weui-flex__item textcenter runk">排名:{{obtainstudent.data.runk}}</view>
        <view class="weui-flex__item textcenter">招生人数:{{obtainstudent.data.total_num}}</view>
      </view>
    </view>
  </Panel>

  <Panel>
    <view class="title" slot="title"></view>
    <view class="title" slot="content">
      <view wx:if="{{obtainstudent.data.student_list.length>0}}">
        <repeat for="{{obtainstudent.data.student_list}}" index="index" item="item" key="key">
          <StuItem :item="item"></StuItem>
        </repeat>
      </view>
      <view wx:else>
        <view class="nodata font24">{{loadingdata}}</view>
      </view>
    </view>
  </Panel>

</template>

<script>
  import wepy from 'wepy'
  import { connect,getStore } from 'wepy-redux'
  import { obtainStudentList} from '../store/actions/obtainstuAction.js'
  import Panel  from '../components/panel'
  import TabSlider from '../components/tab-slider'
  import StuItem from '../components/stu-item'
  import util from '../util/util';
  import auth from '../util/auth';
  let store=getStore();

  @connect({
     obtainstudent(state){
       return state.obtainStuReducer.obtainstudent
     },
  })

  /**
   * 招生
   */
  export default class ObtainStudent extends wepy.page {

    config = {
      navigationBarTitleText: '招生'
    }

    components = {
      Panel:Panel,
      TabSlider:TabSlider,
      StuItem:StuItem
    }

    data = {
      loadingdata:"正在加载学员数据...",
      startvalue:util.getDate('/'),
      endvalue:util.getDate('/'),
      startdate:"2017-01-01",
      enddate:util.getDate('/')
    }

    computed = {

    }

    watch={
      obtainstudent(newdata,olddata){
        if(newdata !== olddata){
          this.loadingdata="啊哦，没有找到该学员~";
          this.$apply();
        }
      }
    }
    methods = {

      async parentFn (id, evt) {
         this.getData(id);
      },
      //日期切换
      bindDateChange: function(e) {

        let type = e.currentTarget.dataset.type;

        if(type == 0){
          //开始日期
          this.startvalue=e.detail.value;
        }else{
          //结束日期
          this.endvalue=e.detail.value;
        }

        let time = this.startvalue +','+ this.endvalue;
        this.getData(time);

      },
      getWeekData:function(){
        let week = util.getOneWeek().join(",");
        this.getData(week);
      }
    }
    /*
     * 获取和点击请求的数据
     */
    async getData(time=""){
      let data = {
        time:time
      }
      await obtainStudentList(store,"coach/obtainstudent",data,true);
      this.$apply();
    }

    async onLoad() {
      try{
        await auth.login();
        await this.getData();
      }catch(error){
        console.log(error.msg);
      }

    }
  }
</script>

<style lang="scss">

@import "../styles/style";
.search{
  padding:20rpx 30rpx;
  .searchinput{
    padding:10rpx 20rpx;
    border-radius: 100rpx;
    background-color: #F7F7FA;
  }
}
</style>

<template lang="wxml">
  <Panel>
    <view class="title" slot="title"></view>
    <view class="title" slot="content">
      <view>
        <view class="search bgc_fff">
          <input class="font24 searchinput" type="search" bindinput="bindInput" bindconfirm='confirmSearch' confirm-type='search' placeholder="请输入学员姓名，身份证，手机号" />
        </view>
      </view>
    </view>
  </Panel>
    <Panel >
      <view class="title" slot="title"></view>
      <view class="title" slot="content">
         <TabSlider :tablist.sync="tablist" :title.sync="" @childFn.user="parentFn" ></TabSlider>
      </view>
    </Panel>

    <Panel >
      <view class="title" slot="title"></view>
      <view class="title" slot="content">
        <view wx:if="{{studentdata.data.content.length>0}}">
          <repeat for="{{studentdata.data.content}}" index="index" item="item" key="key">
            <StuItem :item="item" @btnClick.user="btnClick"></StuItem>
          </repeat>
          <view class="loadfinashtext font24 c_8994A2 textcenter pd20">{{loadfinashtext}}</view>
        </view>
        <view wx:else>
          <view class="nodata font24">{{loadingdata}}</view>
        </view>
      </view>
    </Panel>
</template>

<script>
  import wepy from 'wepy'
  import { connect,getStore } from 'wepy-redux'
  import { getStudentData ,setStudentAction} from '../store/actions/studentAction.js'
  import Panel  from '../components/panel'
  import TabSlider from '../components/tab-slider'
  import StuItem from '../components/stu-item'
  import auth from '../util/auth';
  import tips from '../util/tips';

  let store=getStore();

  @connect({
     studentdata(state){
       return state.studentReducer.studentdata
     }
  })
 /**
  * 学员页面
  **/
  export default class Student extends wepy.page {
    config = {
      navigationBarTitleText: '学员'
    }

    components = {
      Panel:Panel,
      TabSlider:TabSlider,
      StuItem:StuItem
    }

    data = {
      loadingdata:"正在加载数据...",
      isfirst:0,//是否第一次进入
      page:1,//页数
      pagesize:4,//每页数据个数
      loadfinashtext:"",//上拉加载到底文字提示
      keywords:"",// 搜索关键字
      tablist:[],//切换tab
      loadmore:true,//加载更多
      id:1,//tab id
      btnClickflag:0 // 是否点击预约考试按钮
    }

    computed = {
    }

    watch={
      studentdata(newdata,olddata){

        if(newdata !== olddata){
          this.loadingdata="啊哦，没有找到该学员~";
          this.$apply();
        }else{

        }
      }
    }

    methods = {
      async parentFn (id, evt) {
         this.id = id;
         this.page=1; //页面回到初始值
         this.loadfinashtext = "";
         this.loadmore=true;
         store.dispatch(setStudentAction({}));//reedux里的数据置空
         this.getData(id,this.inputvalue);
      },
      //获取搜索框输入值
      bindInput(e){
        console.log(e.detail.value);
        this.keywords = e.detail.value;
      },
      //确认搜索按钮点击请求
      confirmSearch(){
        console.log(this.inputvalue);
        this.page=1; //页面回到初始值
        this.loadfinashtext = "";
        this.loadmore=true;
        store.dispatch(setStudentAction({}));//reedux里的数据置空
        this.getData("",this.keywords);
      },
      //点击右下角预约考试等按钮
      btnClick(btn,sign_id){
        console.log(btn,sign_id);
        this.btnClickflag = 1;//点击按钮flag
        if(btn.type == 0){ //预约考试
          wepy.navigateTo({
            url:`preexam?sign_id=${sign_id}`
          })
        }else if(btn.type == 1){//查看考试
            wepy.navigateTo({url: 'examdetail?id=' + btn.detail_id});
        }else{
          return ;
        }
      }
    }

    /*
     * 获取和点击请求的数据
     */
    async getData(id,keywords){

      let data = {
        tab:id?id:1,
        keywords:keywords?keywords:'',
        page:this.page,
        size:this.pagesize
      }
      try{
        let res =  await getStudentData(store,"coach/student",data,true);
        this.tablist = res.data.tab;

        //已经请求完所有数据 阻止请求
        if(res.data.content.length < this.pagesize){
          this.loadmore = false;
          this.loadfinashtext = "已经到底了～"
          this.$apply();
        }
        this.$apply();
      }catch(error){
        tips.modal(error.message)
      }
    }

    async onShow(){

      if(this.isfirst === 0 && this.btnClickflag ==0){
          await this.getData(this.id,"");
      }
    }

    onHide(){
      this.isfirst = 0;
    }

    async onLoad() {

      try{
        this.isfirst =1;
        await auth.login();
        await this.getData();

      }catch(error){

      //  tips.error(error);
      }
    }
    //小程序自带上拉加载监听函数
   onReachBottom() {
     this.page+=1;
     if(this.loadmore){
       this.getData(this.id,this.keywords);
     }else{
       this.loadfinashtext = "已经到底了～"
     }
   }
  }
</script>

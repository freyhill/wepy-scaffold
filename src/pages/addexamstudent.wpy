<style lang="scss">
@import "../styles/style";
page{
  padding-bottom: 150rpx;
}
.check_confirm{
  position: fixed;
  left:0;
  bottom:0;
  width: 690rpx;
  border-top:1rpx solid #E4E3E3;
}

</style>

<template lang="wxml">
    <Panel>
      <view class="title" slot="title"></view>
      <view class="title" slot="content">
         <TabSlider :tablist.sync="tablist" :title.sync="" @childFn.user="parentFn"></TabSlider>
      </view>
    </Panel>

    <Panel>
      <view class="title" slot="title"></view>
      <view class="title" slot="content">
        <view wx:if="{{addexamstudentdata.data.content.length>0}}">
          <repeat for="{{addexamstudentdata.data.content}}" index="index" item="item" key="key">
            <StuItem :item="item" from="add" @childFn.user="checkStudent"></StuItem>
          </repeat>
        </view>
        <view wx:else>
          <view class="nodata font24">{{loadingdata}}</view>
        </view>
      </view>
    </Panel>
    <Panel>
      <view class="title" slot="title"></view>
      <view class="title" slot="content">
        <view class="weui-cell check_confirm bgc_fff">
          <view class="weui-cell__hd font24 c_4C556E">已选择<text class="main_color font40"> {{checkedlen}}</text> 人</view>
          <view class="weui-cell__bd"></view>
          <view class="weui-cell__ft"><button class="confirmbtn main_bg_color c_fff font24" @tap="confirmCheck">确定</button></view>
        </view>
      </view>
    </Panel>
</template>

<script>
  import wepy from 'wepy'
  import { connect,getStore } from 'wepy-redux'
  import { getAddExamStudentData } from '../store/actions/addexamstudentAction.js'
  import Panel  from '../components/panel'
  import TabSlider from '../components/tab-slider'
  import StuItem from '../components/stu-item'
  import auth from '../util/auth';
  import util from '../util/util';
  import http from '../util/http';
  import Tips from '../util/tips'

  let store=getStore();

  @connect({
     addexamstudentdata(state){
       return state.addexamstudentReducer.addexamstudentdata
     },
  })

  export default class AddExamStudent extends wepy.page {
    config = {
      navigationBarTitleText: '学员'
    }
    components = {
      Panel:Panel,
      TabSlider:TabSlider,
      StuItem:StuItem
    }

    data = {
      tablist:{},
      studentlist:{},
      pdata:111,
      loadingdata:"正在加载数据...",
      isfirst:0,
      checkedlen:0,
      addexamstudentdata:{},
      idsarray:[]
    }

    computed = {
    }

    watch={
      addexamstudentdata(newdata,olddata){


        console.log("addexamstudentdata",newdata,olddata);
        //拿到新数据后跟存储的数据比较 这块2儿比较复杂 需要整理下

        let checkedArray = util.commonArray(newdata.data.content,this.idsarray,'sign_id')
        checkedArray.map((item)=>{
          item.checked="checked";
        })

        if(newdata !== olddata){
          this.addexamstudentdata = newdata;
          this.loadingdata="啊哦，没有找到该学员~";
          this.$apply();
        }
      }
    }

    methods = {
      async parentFn (id, evt) {
         this.getData(id);
      },
      //check item
      checkStudent(id){

        this.addexamstudentdata.data.content.map((item)=>{
            if(item.sign_id === id){
              if(this.idsarray.includes(id)){
                item.checked  = "";
              }else{
                item.checked  = "checked";
              }
            }
        })
        util.checkArray(this.idsarray,id);
        this.checkedlen = this.idsarray.length;
        this.$apply();
      },

      //确认添加请求
      confirmCheck(){
        let data = {
          ids:this.idsarray.join(','),
          exam_plan_merchant_id:this.placeid
        }
        http.post(`coach/batch_add`,data,true).then(function(res){
          console.log("res",res);
        }).catch(function(error){
          Tips.error(error.message);
        })

      }
    }

    /*
     * 获取和点击请求的数据
     */
    async getData(id){

      let data = {
        tab:id?id:1
      }
      try{
        let res =  await getAddExamStudentData(store,"coach/add_exam_stulist",data,true);
        this.tablist= res.data.tab;
        this.$apply();
      }catch(error){
        console.log();
      }
    }


    async onShow(){
      if(this.isfirst === 0){
          await this.getData();
      }
    }
    onHide(){
      this.isfirst = 0;
    }
    async onLoad(options) {
      this.placeid = options.placeid?options.placeid:1;
      try{
        this.isfirst =1;
        await auth.login();
        await this.getData(options.id);

      }catch(error){
        console.log(error.msg);
      }
    }
  }
</script>

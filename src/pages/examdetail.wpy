<style lang="scss">

.status{
  padding:10rpx 26rpx;
  border-radius: 10rpx;
}
</style>

<template lang="wxml">
    <Panel>
      <view class="title" slot="title"></view>
      <view class="title" slot="content">
        <view class="bgc_fff pd20" wx:if="{{examdetaildata.data.time}}">
          <view class="textcenter"><text class="font32 c_c_2D2E38">{{examdetaildata.data.time}}</text><text class="bgc_FFC10C font20 c_4C556E status ml20 vam">{{examdetaildata.data.status}}</text></view>
          <view class="weui-flex font24 c_8994A2">
            <view class="weui-flex__item textright pdr20">{{examdetaildata.data.course}}</view>
            <view class="weui-flex__item textcenter">{{examdetaildata.data.place}}</view>
            <view class="weui-flex__item textleft">{{examdetaildata.data.num}}</view>
          </view>
        </view>
      </view>
    </Panel>
    <Panel>
      <view class="title" slot="title"></view>
      <view class="title" slot="content">
        <ExamDetailList  @btnClick.user="btnClick"></ExamDetailList>
      </view>
    </Panel>
</template>

<script>
  import wepy from 'wepy';
  import { connect,getStore } from 'wepy-redux';
  import { getExamdetailData ,setExamdetailAction} from '../store/actions/examdetailAction.js';
  import Panel  from '../components/panel';
  import TabSlider from '../components/tab-slider';
  import ExamDetailList from '../components/exam-detail-stu-list';
  import auth from '../util/auth';
  import http from '../util/http';
  import Tips from '../util/tips';

  let store=getStore();

  @connect({
     examdetaildata(state){
       return state.examdetailReducer.examdetaildata
     },
  },{
    getExamdetailData,
    setExamdetailAction
  })

  export default class ExamDetil extends wepy.page {
    config = {
      navigationBarTitleText: '考试详情'
    }
    components = {
      Panel:Panel,
      TabSlider:TabSlider,
      ExamDetailList:ExamDetailList
    }

    data = {
      tablist:{},
      examlist:{},
      isfirst:0
    }

    computed = {

    }

    methods = {
      //点击按钮移除操作
      btnClick(btn,id){

        if(btn.type == 2){
          http.delete(`coach/remove_student/${id}`,{},true).then(function(res){
            console.log(res);
            if(res.success == "true"){
              Tips.success("移除成功");
            }else{
              Tips.success(res.msg);
            }
          }).catch(function(error){
            Tips.error("网络错误");

          })
        }
    }
  }
    /*
     * 获取和点击请求的数据
     */
    async getData(id){

      let data = {
        id:id?id:1
      }
      await getExamdetailData(store,"coach/exam_detail",data,true);
      this.$apply();
    }
    async onShow(options){
      this.onLoad();
    }
    onHide(){
      this.isfirst = 0;
    }
    async onLoad(options) {

      try{
        this.isfirst = 1;
        await auth.login();
        await this.getData(options.id);
      }catch(error){
        console.log(error.msg);
      }
    }
  }
</script>
